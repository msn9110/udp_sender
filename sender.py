#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.18
#  in conjunction with Tcl version 8.6
#    Oct 28, 2018 04:30:07 PM CST  platform: Linux

import sys
import udp

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import sender_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Form (root)
    sender_support.init(root, top)
    root.mainloop()

w = None
def create_Form(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Form (w)
    sender_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Form():
    global w
    w.destroy()
    w = None

class Form:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font9 = "-family 文泉驛微米黑 -size 10 -weight normal -slant roman "  \
            "-underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("500x450+476+142")
        top.title("UDP Sender")
        top.configure(highlightcolor="black")

        self.lb1 = tk.Label(top)
        self.lb1.place(relx=0.06, rely=0.044, height=18, width=32)
        self.lb1.configure(activebackground="#f9f9f9")
        self.lb1.configure(font=font9)
        self.lb1.configure(text='''IP :''')
        self.lb1.configure(width=32)

        self.txt_ip = tk.Entry(top)
        self.txt_ip.place(relx=0.12, rely=0.044,height=20, relwidth=0.292)
        self.txt_ip.configure(background="white")
        self.txt_ip.configure(font="TkFixedFont")
        self.txt_ip.configure(selectbackground="#c4c4c4")

        self.btn_send = ttk.Button(top)
        self.btn_send.place(relx=0.44, rely=0.044, height=25, width=74)
        self.btn_send.configure(takefocus="")
        self.btn_send.configure(text='''SEND''')

        self.btn_pause = ttk.Button(top)
        self.btn_pause.place(relx=0.62, rely=0.044, height=25, width=74)
        self.btn_pause.configure(takefocus="")
        self.btn_pause.configure(text='''PAUSE''')

        self.btn_stop = ttk.Button(top)
        self.btn_stop.place(relx=0.8, rely=0.044, height=25, width=74)
        self.btn_stop.configure(takefocus="")
        self.btn_stop.configure(text='''STOP''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.06, rely=0.111, height=18, width=52)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(text='''Content :''')

        self.btn_clear = tk.Button(top)
        self.btn_clear.place(relx=0.52, rely=0.111, height=26, width=72)
        self.btn_clear.configure(activebackground="#d9d9d9")
        self.btn_clear.configure(text='''CLEAR''')
        self.btn_clear.configure(width=72)

        self.btn_resume = tk.Button(top)
        self.btn_resume.place(relx=0.72, rely=0.111, height=26, width=72)
        self.btn_resume.configure(activebackground="#d9d9d9")
        self.btn_resume.configure(text='''RESUME''')
        self.btn_resume.configure(width=72)

        self.txt_msg = tk.Text(top)
        self.txt_msg.place(relx=0.04, rely=0.178, relheight=0.782
                , relwidth=0.932)
        self.txt_msg.configure(background="white")
        self.txt_msg.configure(font="TkTextFont")
        self.txt_msg.configure(selectbackground="#c4c4c4")
        self.txt_msg.configure(width=466)
        self.txt_msg.configure(wrap='word')

        self.set_on_listener()

    def set_on_listener(self):

        self.btn_stop.configure(command=lambda: udp.send_control(self.txt_ip.get(),
                                                                 'STOP'))
        self.btn_pause.configure(command=lambda: udp.send_control(self.txt_ip.get(),
                                                                  'PAUSE'))
        self.btn_send.configure(command=lambda: udp.send_message(self.txt_ip.get(),
                                                                 self.txt_msg.get("1.0", "end-1c")))
        self.btn_clear.configure(command=lambda: self.txt_msg.delete('1.0', "end-1c"))
        self.btn_resume.configure(command=lambda: udp.send_message(self.txt_ip.get(), ''))
if __name__ == '__main__':
    vp_start_gui()



